@model List<FinnHubTest.Models.Stock>

<div class="container">
    <div class="row mt-5">
        <div class="col-12">
            <div style="border: 1px solid #d1d1d1; border-radius: 10px; box-shadow: 0 2px 10px rgba(32, 33, 36, 0.28); padding: 20px;">
                <!-- Title and Add Favorite form -->
                <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-3">
                    <h4>Favorites</h4>
                    <form id="addFavoriteForm" asp-controller="Favorites" asp-action="Add" class="input-group mt-3 mt-md-0" style="max-width: 300px;">
                        <input type="text" class="form-control" placeholder="Stock symbol" name="symbol"
                               style="border-top-left-radius: 20px; border-bottom-left-radius: 20px; 
                                border-right: none; box-shadow: 0 1px 6px rgba(32, 33, 36, 0.28);">
                        <button type="submit" class="btn btn-primary"
                                style="border-top-right-radius: 20px; border-bottom-right-radius: 20px;
                                box-shadow: 0 1px 6px rgba(32, 33, 36, 0.28);">Add</button>
                    </form>
                </div>
                
                <!-- Favorites table -->
                <div id="stockTable" class="table-responsive">
                    <table class="table">
                        <thead>
                        <tr>
                            <th>Symbol</th>
                            <th>Price</th>
                            <th>Change</th>
                            <th>% Change</th>
                            <th>Day's High</th>
                            <th>Day's Low</th>
                            <th>Day's Open</th>
                            <th>Prev. Close</th>
                            <th></th> <!-- For Remove Button -->
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var stock in Model)
                        {
                            var changeClass = stock.Change >= 0 ? "text-success" : "text-danger";
                            var percentChangeClass = stock.PercentChange >= 0 ? "text-success" : "text-danger";
                            <tr data-symbol="@stock.Symbol" class="align-items-center">
                                <td><strong>@stock.Symbol</strong></td>
                                <td class="current-price">$@stock.CurrentPrice.ToString("0.00")</td>
                                <td class="@changeClass change">$@stock.Change.ToString("0.00")</td>
                                <td class="@percentChangeClass percent-change">@stock.PercentChange.ToString("0.00")%</td>
                                <td class="high-price">$@stock.HighPriceOfDay.ToString("0.00")</td>
                                <td class="low-price">$@stock.LowPriceOfDay.ToString("0.00")</td>
                                <td class="open-price">$@stock.OpenPriceOfDay.ToString("0.00")</td>
                                <td class="prev-close-price">$@stock.PreviousClosePrice.ToString("0.00")</td>
                                <td>
                                    <form asp-controller="Favorites" asp-action="Remove" method="post">
                                        <input type="hidden" name="symbol" value="@stock.Symbol" />
                                        <button type="submit" class="btn btn-danger">Remove</button>
                                    </form>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
                <!-- Last updated time -->
                <p id="lastUpdated" class="text-center text-muted small"></p>
            </div>
        </div>
    </div>
    <div class="container fixed-bottom pb-2">
        <div class="row">
            <div class="col-12">
                <div id="errorMessage" class="alert alert-danger mx-auto text-center" style="display: none; opacity: 0.9; max-width: 600px;"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/js/site.js"></script>
    <script>
        // Set the "Last updated at" time when the page is ready
        $(document).ready(function() {
            var now = new Date();
            $('#lastUpdated').text('Last updated at ' + now.toLocaleDateString() + ' ' + now.toLocaleTimeString());
        });
        
        $('#addFavoriteForm').on('submit', function(e) {
            e.preventDefault();
            
            var symbol = $(this).find('input[name="symbol"]').val();
            
            $.ajax({
                url: '@Url.Action("Add", "Favorites")',
                type: 'POST',
                data: { symbol: symbol },
                success: function (result) {
                    if (result.error) {
                        // Display the error message
                        displayMessage(result.error);
                    } else {
                        // Display the success message and refresh the page
                        displayMessage("Stock successfully added to favorites!", true);
                        setTimeout(function() {
                            location.reload();
                        }, 3000);
                    }
                },
                error: function () {
                    // Display the network error message
                    displayMessage("Failed to add favorite due to a network error. Please try again.");
                }
            });
        });

        setInterval(function() {
            $.get('@Url.Action("GetFavoriteStocks", "Favorites")', function(data) {
                data.forEach(stock => {
                    var row = $(`tr[data-symbol="${stock.symbol}"]`);
                    if (row.length) {
                        row.find('.current-price').text('$' + stock.currentPrice.toFixed(2));
                        row.find('.change')
                            .text('$' + stock.change.toFixed(2))
                            .removeClass('text-success text-danger')
                            .addClass(stock.change >= 0 ? 'text-success' : 'text-danger');
                        row.find('.percent-change')
                            .text(stock.percentChange.toFixed(2) + '%')
                            .removeClass('text-success text-danger')
                            .addClass(stock.percentChange >= 0 ? 'text-success' : 'text-danger');
                        row.find('.high-price').text('$' + stock.highPriceOfDay.toFixed(2));
                        row.find('.low-price').text('$' + stock.lowPriceOfDay.toFixed(2));
                        row.find('.open-price').text('$' + stock.openPriceOfDay.toFixed(2));
                        row.find('.prev-close-price').text('$' + stock.previousClosePrice.toFixed(2));
                    }
                });
        
                // Update the "Last updated at" time after fetching stock prices.
                var now = new Date();
                $('#lastUpdated').text('Last updated at ' + now.toLocaleDateString() + ' ' + now.toLocaleTimeString());
            });
        }, 90000);  // 90 seconds
    </script>
}